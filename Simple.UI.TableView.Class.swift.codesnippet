<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>stableview</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>class &lt;#TableView#&gt;: UITableView {
    
    override init(frame: CGRect, style: UITableView.Style) {
        super.init(frame: frame, style: style)
        setupSubviews()
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    func setupSubviews() {
        if #available(iOS 11.0, *) {
            contentInsetAdjustmentBehavior = .never
        }
        contentInset = UIEdgeInsets(top: &lt;#top#&gt;, left: &lt;#left#&gt;, bottom: &lt;#bottom#&gt;, right: &lt;#right#&gt;)
        backgroundColor = &lt;#color#&gt;
        register(&lt;#UITableView.Type#&gt;, forCellReuseIdentifier: &lt;#identifier#&gt;)
        showsVerticalScrollIndicator = true
        separatorStyle = .none
        estimatedRowHeight = 0
        estimatedSectionFooterHeight = 0
        estimatedSectionHeaderHeight = 0
        delegate = &lt;#delegate#&gt;
        dataSource = &lt;#dataSource#&gt;
        tableHeaderView = &lt;#tableHeaderView#&gt;
    }
}

extension &lt;#TableView#&gt;: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -&gt; CGFloat {
        return UITableView.automaticDimension
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
    }
}

extension &lt;#TableView#&gt;: UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -&gt; Int {
        return &lt;#count#&gt;
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {
        return &lt;#row count#&gt;
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: &lt;#identifier#&gt;, for: indexPath) as! &lt;#UITableViewCell.Type#&gt;
        return cell
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>D81BF986-4AA5-4CB7-B4E4-FBA9ADAB177E</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>Simple Create TableView Class</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
